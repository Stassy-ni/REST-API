{
  "openapi": "3.0.3",
  "info": {
    "title": "Math Learning Platform API",
    "version": "1.0.0",
    "description": "Спецификация REST API для модуля управления классами и доступом учеников."
  },
  "servers": [
    {
      "url": "https://api.mathplatform.example.com/v1",
      "description": "Production"
    }
  ],
  "tags": [
    {
      "name": "Classroom - Классы",
      "description": "Управление школьными классами: создание, архивирование, удаление"
    },
    {
      "name": "Classroom - Ученики",
      "description": "Управление учениками: добавление, перенос, удаление, просмотр"
    }
  ],
  "paths": {
    "/classes": {
      "get": {
        "tags": ["Classroom - Классы"],
        "summary": "Получить список своих классов",
        "description": "Возвращает список классов, к которым привязан текущий учитель. Поддерживает фильтрацию и пагинацию.",
        "security": [{"BearerAuth": []}],
        "parameters": [
          { "name": "grade", "in": "query", "schema": { "type": "integer" }, "description": "Фильтрация по параллели (классу)" },
          { "name": "status", "in": "query", "schema": { "type": "string", "enum": ["active", "archived"] }, "description": "Фильтрация по статусу: активные или архивные классы" },
          { "name": "search", "in": "query", "schema": { "type": "string" }, "description": "Поиск по названию класса" },
          { "name": "limit", "in": "query", "schema": { "type": "integer", "default": 20 }, "description": "Ограничение количества результатов" },
          { "name": "offset", "in": "query", "schema": { "type": "integer", "default": 0 }, "description": "Смещение для пагинации" }
        ],
        "responses": {
          "200": {
            "description": "Список классов",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": { "type": "integer" },
                    "next": { "type": "string", "format": "uri", "nullable": true },
                    "previous": { "type": "string", "format": "uri", "nullable": true },
                    "results": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Classroom.Class" }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещён — только для учителей"
          }
        }
      },
      "post": {
        "tags": ["Classroom - Классы"],
        "summary": "Создать новый класс",
        "description": "Учитель может создать новый класс, указав параллель (grade), букву (letter) и школу.",
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Classroom.ClassCreate" },
              "example": {
                "grade": 7,
                "letter": "Б",
                "school_id": 101
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Класс успешно создан",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Classroom.Class" }
              }
            }
          },
          "400": { "description": "Ошибка валидации (например, дублирующий класс)" },
          "403": { "description": "Нет прав (например, ученик пытается создать класс)" }
        }
      }
    },
    "/classes/{class_id}": {
      "get": {
        "tags": ["Classroom - Классы"],
        "summary": "Получить данные одного класса (с учениками)",
        "description": "Учитель получает информацию о своём классе, включая список учеников с логинами и статусами.",
        "security": [{"BearerAuth": []}],
        "parameters": [
          { "name": "class_id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": {
            "description": "Информация о классе",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Classroom.ClassDetail" }
              }
            }
          },
          "403": { "description": "Нет доступа к чужому классу" },
          "404": { "description": "Класс не найден" }
        }
      },
      "patch": {
        "tags": ["Classroom - Классы"],
        "summary": "Обновить название класса (grade/letter)",
        "description": "Позволяет учителю изменить название класса. Только активные классы можно редактировать.",
        "security": [{"BearerAuth": []}],
        "parameters": [
          { "name": "class_id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Classroom.ClassUpdate" },
              "example": {
                "grade": 6,
                "letter": "В"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Класс обновлён" },
          "403": { "description": "Нельзя редактировать архивный класс или чужой" },
          "404": { "description": "Класс не найден" }
        }
      }
    },
    "/classes/{class_id}/archive": {
      "patch": {
        "tags": ["Classroom - Классы"],
        "summary": "Архивировать класс",
        "description": "Переводит класс в архивный статус. После этого он становится недоступен для редактирования.",
        "security": [{"BearerAuth": []}],
        "parameters": [
          { "name": "class_id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Класс успешно архивирован" },
          "403": { "description": "Нет доступа или класс уже архивный" },
          "404": { "description": "Класс не найден" }
        }
      }
    },
    "/classes/{class_id}/students": {
      "post": {
        "tags": ["Classroom - Ученики"],
        "summary": "Добавить учеников в класс (одного или несколько)",
        "description": "Позволяет добавить одного или нескольких учеников в класс. Поддерживает генерацию логинов и паролей.",
        "security": [{"BearerAuth": []}],
        "parameters": [
          { "name": "class_id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Classroom.StudentCreateList" },
              "example": {
                "students": [
                  { "full_name": "Петя Петров", "email": "petya@example.com" },
                  { "full_name": "Саша Иванова", "email": "sasha@example.com" }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ученики добавлены",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Classroom.StudentInline" }
                }
              }
            }
          },
          "400": { "description": "Ошибки валидации или дубликаты email/username" },
          "409": { "description": "Ученик уже состоит в другом активном классе" }
        }
      }
    },
    "/students/{student_id}": {
      "patch": {
        "tags": ["Classroom - Ученики"],
        "summary": "Редактировать ученика (ФИО, перенос в другой класс)",
        "description": "Учитель может переименовать ученика и перенести его в другой класс, если он является владельцем обоих классов.",
        "security": [{"BearerAuth": []}],
        "parameters": [
          { "name": "student_id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Classroom.StudentUpdate" },
              "example": {
                "full_name": "Олег Сидоров",
                "class_id": 18
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Ученик обновлён" },
          "403": { "description": "Нельзя редактировать чужого ученика или переместить в чужой класс" },
          "404": { "description": "Ученик не найден" }
        }
      },
      "delete": {
        "tags": ["Classroom - Ученики"],
        "summary": "Удалить ученика (мягкое удаление)",
        "description": "Учитель может деактивировать ученика, если к нему не привязаны активные задания или аналитика.",
        "security": [{"BearerAuth": []}],
        "parameters": [
          { "name": "student_id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "204": { "description": "Ученик удалён (деактивирован)" },
          "403": { "description": "Нет прав или ученик не в своём классе" },
          "409": { "description": "Нельзя удалить ученика с активными заданиями" },
          "404": { "description": "Ученик не найден" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Classroom.Class": {"type":"object","properties":{"id":{"type":"integer","example":12},"name":{"type":"string","example":"7Б"},"grade":{"type":"integer","example":7},"letter":{"type":"string","example":"Б"},"school_id":{"type":"integer","example":101},"status":{"type":"string","enum":["active","archived"],"example":"active"},"students_count":{"type":"integer","example":25},"created_at":{"type":"string","format":"date-time","example":"2025-01-15T09:00:00Z"},"updated_at":{"type":"string","format":"date-time","example":"2025-06-20T12:00:00Z"}}},
      "Classroom.ClassCreate": {"type":"object","required":["grade","letter","school_id"],"properties":{"grade":{"type":"integer","example":6},"letter":{"type":"string","example":"А"},"school_id":{"type":"integer","example":101}}},
      "Classroom.ClassDetail": {"allOf": [{ "$ref": "#/components/schemas/Classroom.Class" }, {"type": "object", "properties": {"students": {"type": "array", "items": { "$ref": "#/components/schemas/Classroom.StudentInline"}}}}]},
      "Classroom.ClassUpdate": {"type":"object","properties":{"grade":{"type":"integer"},"letter":{"type":"string"}}},
      "Classroom.StudentInline": {"type":"object","properties":{"id":{"type":"integer"},"full_name":{"type":"string"},"username":{"type":"string"},"initial_password":{"type":"string"},"is_active":{"type":"boolean"}}},
      "Classroom.StudentCreateList": {"type":"object","required":["students"],"properties":{"students":{"type":"array","items":{"$ref":"#/components/schemas/Classroom.StudentShort"}}}},
      "Classroom.StudentShort": {"type":"object","required":["full_name","email"],"properties":{"full_name":{"type":"string","example":"Анна Кузнецова"},"email":{"type":"string","format":"email","example":"anna@example.com"}}},
      "Classroom.StudentUpdate": {"type":"object","properties":{"full_name":{"type":"string","example":"Олег Сидоров"},"class_id":{"type":"integer","example":18}}}
    }
  }
}
